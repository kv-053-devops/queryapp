steps:
- name: 'python:3.6-alpine'
  id: Prepearing and running UnitTests
  entrypoint: /bin/sh
  args:
  - '-c'
  - 'apk update'
  - 'apk add libpq-dev'
  - 'python unit_test.py -v'

- name: 'gcr.io/cloud-builders/docker'
  id: Build Docker Image
  args:
  - 'build'
  - '-t'
  - 'eu.gcr.io/$PROJECT_ID/queryapp:$SHORT_SHA'
  - '.'

- name: 'comarada/envsubst'
  id: Prepare yaml for main
  args: ['kub_prod_main.yaml']
  env:
    - 'PROJECT_ID=$PROJECT_ID'
    - 'SHORT_SHA=$SHORT_SHA'
  
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp','ready_kub_prod_main.yaml','gs://$PROJECT_ID-spinnaker-conf/queryapp/ready_kub_prod_main.yaml']
  
- name: 'comarada/envsubst'
  id: Prepare yaml for canary
  args: ['kub_prod_canary.yaml']
  env:
    - 'PROJECT_ID=$PROJECT_ID'
    - 'SHORT_SHA=$SHORT_SHA'
  
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp','ready_kub_prod_canary.yaml','gs://$PROJECT_ID-spinnaker-conf/queryapp/ready_kub_prod_canary.yaml']

- name: 'comarada/envsubst'
  id: Prepare dev enviroment file
  args: ['kub_dev.yaml']
  env:
    - 'PROJECT_ID=$PROJECT_ID'
    - 'SHORT_SHA=$SHORT_SHA'

- name: 'gcr.io/cloud-builders/gsutil'
  id: Push dev K8 manifest to GS bucket
  args: ['cp','ready_kub_dev.yaml','gs://$PROJECT_ID-spinnaker-conf/queryapp/ready_kub_dev.yaml']
  
artifacts:
  objects:
    location: 'gs://$PROJECT_ID-spinnaker-conf/queryapp/'
    paths: ['spin_job.yaml']
    
images: ['eu.gcr.io/$PROJECT_ID/queryapp:$SHORT_SHA']
